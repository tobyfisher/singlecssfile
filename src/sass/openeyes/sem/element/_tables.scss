// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.

@use "openeyes/var" as *;
@use "openeyes/mix" as *;

// OE Element - Tables
// Tables are used to layout most element data
// to help better line up data down the element stack


.element {

	// <table>
	// raw DOM styling
	// because tables are used so much in SEM
	// thought it might be more helpful this way ...

	table {

		// width:100%;
		// I really want to do this for VIEW and EDIT as default
		// but it's now a hassle, because so many elements have
		// tables using "cols-10", this would override them

		// left in BUT should use 'data-group' instead!
		&.pad-top {
			margin-top: 20px;
		}

		&.pad-bottom {
			margin-bottom: 20px;
		}

		// Tables generally require that the last cell
		// is aligned right because it's an icon action
		td:last-child,
		th:last-child {
			text-align: right;
		}

		// Override that, make last left aligned
		&.last-left {
			td:last-child,
			th:last-child {
				text-align: left;
			}
		}

		// however, if there is only ONE td
		// it generally should be aligned left...
		td:first-child,
		th:first-child {
			text-align: left;
		}



		// in View mode for simple label > value lists
		// **** note: the label-value approach was pre v3
		// in V3 simply use a <th> for first column!
		&.label-value {
			.data-label {
				opacity: 0.7; // this works for both themes
				@include font-size(11);
				font-weight: var(--font-medium);
				vertical-align: middle;
			}

			.data-value {
				@include font-size(13);
				font-weight: var(--font-medium);
				vertical-align: middle;
			}

			&.no-lines {
				tr {
					border-bottom: none;
				}
			}
		}

		// clickable rows ... but only <tbody>
		&.clickable-rows {
			tbody {
				tr {
					&:is(:hover, :active, :focus) {
						cursor: pointer;
						background: var(--btn-blue); // row is a big button
						td {
							color: rgb(255, 255, 255);
						}
					}

					td {
						// increase the hit area slightly (thinking touch!)
						padding-top: 5px;
						padding-bottom: 5px;
					}

				}
			}
		}

		// initially, when doing all the data layouts
		// it seemed vertical-align middle was the best approach
		// however, in hindsight this maybe wasn't such a good move.
		// but to change it all now is a bit too risky
		// therefore provide a class that does it...
		&.atop {
			tbody {
				th,
				td {
					vertical-align: top; // top!
					padding-top: 4px; // adjust specific padding
					padding-bottom: 4px;
				}
			}
		}

		// underline to help with reading data
		tr {
			border-top: 1px solid var(--gui-line);

			// no-line for when you need to group 2 rows visually together
			&.no-line,
			&:first-child {
				border-top: none;
			}

			&.valign-top {
				td {
					padding-top:4px;
					vertical-align: top;
				}
			}

			// divider is for subtle data divides withIN a table
			// if you want a big divide use <hr class="divider"> and have 2 tables
			&.divider {
				border-top-width: 2px;

				td {
					padding-top: 3px;
					padding-bottom: 3px;
				}
			}

			&.selected-row {
				background: var(--btn-blue); // row is a big button
				td {
					color: rgb(255, 255, 255);
				}
			}
		}

		// decided to add a more descriptive class "large-text"
		&.large,
		&.large-text {
			td {
				@include font-size(14);
			}
		}

		&.priority,
		&.priority-text {

			td {
				@include font-size(16);
				font-weight: var(--font-medium);
			}
		}


		th, td, {

			@include font-size(12);

			// the 4px indent for data provides
			// a valuable breathing space for the
			// left side eye element data
			padding: 2px 0 2px 4px;

			&:first-child {
				// this was 0px, but made it 1px
				// because of clickable-rows, when highlight
				// the date appears cropped.
				padding-left: 1px;
			}

			&.nowrap {
				min-width: 40px; // this was width:1%; // width required to make this work
				white-space: nowrap;
				padding-right: 10px; // because it's nowrap content must give the <td> padding

				&:last-child {
					padding-right: 0;
				}
			}

			&.center {
				text-align: center;
				padding: 0 4px; // was 10px, but can't remember why?
			}

			&.align-left {
				text-align: left;
			}

			&.align-right {
				text-align: right;
			}

			&.valign-top {
				vertical-align: top;
			}

		}

		// <th>
		th {
			text-align: left; // overide default 'middle'
			font-weight: var(--font-light);
			color: var(--txt-light);
		}

		// can be used in <tbody> as a ROW header:
		tbody {
			th {
				font-weight: var(--font-medium);
			}
		}

		// <td>
		td {
			vertical-align: middle;
			height: 28px;

			&.line-r {
				border-right:2px solid var(--gui-line);
				padding-right:8px;
			}

			&.line-l {
				border-left:2px solid var(--gui-line);
				padding-left:8px;
			}

			textarea {
				vertical-align: middle; // ensure correct vertical alignment in <td>
			}
		}

		// tfoot, rarely used.
		// but if it is needs visual division from tbody
		tfoot {
			tr {
				border-top: 3px solid var(--gui-line);
			}
		}
	}
}

