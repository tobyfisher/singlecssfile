// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.

@use "openeyes/var" as *;
@use "openeyes/mix" as *;

// Wrapped with .collapse-data
// Provides the DOM controls to hide/show content
// UI, uses expand/collapse icons
.collapse-data-header-icon {
	position: relative;
	cursor: pointer;
	padding: 5px 20px 5px 0; // allow space for icon
	color: var(--txt-hd);
	font-weight: var(--font-medium);

	// when showing bg area
	.show-bg & {
		@include font-size(14); // match large-text size
	}

	// User regularly interacts with this, turn off selection
	user-select: none;

	// JS, only hook into events on the <div>
	* {
		pointer-events: none;
	}

	// no background-opacity in CSS (... why not huh?!)
	// Use Pseudo to match icon opacity behaviour
	&::after {
		content: "";
		position: absolute;
		top: 0;
		bottom: 0;
		right: 0;
		width: 13px;
		// icons: expand / collapse
		// assumed default state is that the content is collapsed
		background: right center / 13px var(--i-expand) no-repeat;
		// mimic oe-i
		opacity: $oe-icon-opacity;
	}

	// &.expand (default state)
	// no explicit styles for 'expand' class.
	// .collapse, does need updating:
	&.collapse {
		&::after {
			background-image: var(--i-collapse);
		}
		.show-bg & {
			color: var(--txt-base);
		}
	}

	// show user interaction
	&:hover,
	&:focus {
		color: var(--txt-highlight);

		&::after {
			// icon shows interaction
			opacity: 1;
		}

		// If .highlighter is used, make it like behave like a blue button
		// (see WHO checklist in the OpNote)
		.highlighter {
			color: #fff;
			background: var(--btn-blue);
		}
	}
}