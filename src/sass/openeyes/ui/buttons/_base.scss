// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.

@use "openeyes/var" as *;
@use "openeyes/mix" as *;


// HTML element and class because: <a class="button">
button,
.button {
	display: inline-flex;
	justify-content: center;
	align-items: center;

	// sizes - standard:
	height: $oe-input-height;

	// when used inline with other elements this is required
	// to stop it jumping up (baseline is default)
	vertical-align: top;

	// Don't let button text wrap
	white-space: nowrap;

	// resets
	border: 0;
	outline: 0; // accessibility not required in OE App.
	border-radius: 0 !important; // weird border-radius bug fix

	@include font-size(12);
	font-weight: 500;
	color: var(--btn-text);
	background: var(--btn-base);
	cursor: pointer;

	// The browser will override the main line-height 1.4
	// and reset <button> to normal, this won't affect
	// <a> that are styled like buttons!
	line-height: 1;

	// increase hit area
	padding: 0 8px;

	// For: Analytics filters
	// & 9 positions in Strab
	&.thin {
		padding: 0 3px;
	}

	// general states
	&:disabled,
	&.disabled,
	&.inactive {
		cursor: default;
		color: var(--txt-light);
		background: var(--btn-disabled);
		pointer-events: none; // disable

		.oe-i {
			opacity: 0.2;
		}
	}

	// handle icons in buttons
	.oe-i {
		// if in light mode the icon will need inverting
		filter: var(--btn-icon-hover-filter);
		pointer-events: none;
	}

	// Pseudo & JS class hooks
	&:hover,
	&:focus,
	&.active,
	&.selected {
		color: var(--btn-text-selected);
		background: var(--btn-blue);
		.oe-i {
			opacity: 1;
		}
	}

	// override "selected".
	&.selected {
		background: var(--btn-blue-active);
	}

	&:active {
		outline: 1px dotted var(--input-focus-outline);
		outline-offset: 1px;
		color: #fff;
		background: var(--btn-blue-active);
	}
}


