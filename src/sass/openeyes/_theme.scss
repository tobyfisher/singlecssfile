// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.


// CSS Vars (Custom selectors) for theme colours.
// set <HTML> to theme colours e.g. "theme-light"

@mixin cssVars( $group, $map ) {
	@each $type, $prop in $map {
		--#{$group}-#{$type}: #{$prop};
	}
}

// defaults groups for "dark" theme settings

// ---- Backgrounds
$bg: (
	"html": rgb(20, 30, 43),
	"overlay": hsl(210, 17%, 19%),
	"max": #000,
	"popup":#0D161E,
	"title": #0f1926,
	"event": #1E2E42,
	"data": #121A22,
	"grey": rgb(40, 52, 66)
);

$bg-light: (
	"html": #E1E0E0,
	"overlay": #bebdbd,
	"max": #FFF,
	"popup": #f1f0f0,
	"title": hsl(0, 1%, 82%),
	"event": #d7d6d6,
	"data": #F5F5F5,
	"grey": rgb(220, 220, 220)
);

// ---- Font weights (because white on dark bleeds and looks thicker...)
$font-weight: (
	"thin": 100,
	"light": 300,
	"medium": 400,
	"bold": 500
);

$font-weight-light: (
	"thin": 300,
	"light": 400,
	"medium": 500,
	"bold": 700
);

// ---- Text
$txt: (
	"base": rgb(220, 220, 220),
	"light": rgb(140, 140, 140),
	"hd": rgb(87, 120, 150),
	"active": rgb(70, 160, 180),
	"highlight": rgb(0, 200, 205),
	"invert": rgb(13, 13, 13)
);

$txt-light: (
	"base": rgb(10, 10, 10),
	"light": rgb(90, 90, 100),
	"hd": rgb(50, 90, 160),
	"active": rgb(35, 70, 200),
	"highlight": rgb(0, 0, 255),
	"invert": rgb(240, 240, 240),
);

// ---- GUI
$gui: (
	"spinner": rgb(0, 255, 255),
	"vc": rgb(0, 180, 235),
	"line": rgb(43, 64, 87),
	"scroll-track":rgb(10, 10, 15),
	"scroll-thumb":rgb(55, 55, 60),
);

$gui-light: (
	"spinner": rgb(0, 180, 255),
	"vc": rgb(0, 180, 235),
	"line": rgb(162, 160, 160),
	"scroll-track":rgb(95, 95, 100),
	"scroll-thumb":rgb(170, 170, 170),
);

// ---- Buttons
$btn: (
	"base":#1d375b,
	"text":#ccc,
	"text-selected":#ddd,
	"blue-hint": rgb(24, 54, 150),
	"blue": rgb(25, 67, 196),
	"blue-active": #009,
	"green-hint": #18521a,
	"green": #0a8013,
	"green-active": #090,
	"red-hint": hsl(0, 59%, 28%),
	"red": rgb(153, 14, 14),
	"red-active": #a00,
	"disabled": rgb(80, 80, 80),
	"icon-hover-filter": none,
);

$btn-light: (
	"base": rgb(61, 100, 190),
	"text":#eee,
	"text-selected":#fff,
	"blue-hint": rgb(60, 70, 200),
	"blue": rgb(60, 108, 240),
	"blue-active": #00c,
	"green-hint": hsl(125, 82%, 26%),
	"green": rgb(14, 144, 25),
	"green-active": #0a0,
	"red-hint": hsl(360, 83%, 28%),
	"red": rgb(153, 14, 14),
	"red-active": #a00,
	"disabled": rgb(205, 205, 210),
	"icon-hover-filter": invert(100%) grayscale(100%),
);

// ---- Colors (alerts, flags, pathsteps, wait, etc)
$color: (
	"highlighter": rgb(184, 171, 136),
	"green": rgb(0, 105, 0),
	"red": rgb(155, 0, 0),
	"burgundy": rgb(107, 20, 0),
	"orange": rgb(160, 85, 0),
	"yellow": rgb(200, 180, 50),
	"grey": rgb(80, 80, 80),
);

$color-light: (
	"highlighter": rgb(235, 211, 123),
	"green": rgb(0, 155, 0),
	"red": rgb(205, 0, 0),
	"burgundy": rgb(117, 30, 0),
	"orange": rgb(220, 115, 5),
	"yellow": rgb(210, 170, 20),
	"grey": rgb(140, 140, 140),
);


// ---- Inputs
$input: (
	"scheme": "dark",
	"focus-outline": rgb(9, 108, 154),
	"base": hsl(215, 28%, 23%),
	"hint": #222,
	"text": #fff,
	"placeholder": rgb(120, 120, 120),
);

$input-light: (
	"scheme": "light",
	"focus-outline": rgb(7, 1, 224),
	"base": #fff,
	"hint": #ddd,
	"text": #000,
	"placeholder": rgb(181, 181, 181),
);

// ---- SVG icons

$themedIcons: ("add-blue", "add", "arrow-down-bold", "arrow-down", "arrow-left-bold", "arrow-right-bold", "arrow-up-bold", "arrow-up",
"asterisk-blue", "asterisk", "audit-trail", "beo", "cancel", "change", "child-arrow", "cog", "collapse", "comments-added", "comments-who", "comments",
"copy-forward", "crying", "direction-down-circle", "direction-down", "direction-horizontal",
"direction-left-circle", "direction-left", "direction-right-circle", "direction-right", "direction-up-circle", "direction-up",
"double-slash", "doubt-active", "doubt", "download", "downup", "drop-done", "drop", "drug-rx", "duplicate", "edit-blue", "edit",
"exclamation", "expand", "eye-circle", "eye", "female", "filter", "finish", "flag", "flagline", "flux", "fork", "formulary", "happy",
"increase-height-orange", "increase-height", "info-blue", "info", "injection", "lat-L-inactive", "lat-L-query", "lat-L-red", "lat-L",
"lat-NA", "lat-R-green", "lat-R-inactive", "lat-R-query", "lat-R", "letter-1", "letter-2", "letter-GP", "letter-invitation", "line-break",
"male", "menu", "minus-bold", "minus", "more-h", "move", "mpr", "no-permissions", "padlock", "parent-arrow", "path-break", "patient", "pencil-blue",
"pencil", "person-green", "person-inactive", "person-query", "person-split", "person", "plus-bold", "plus-circle", "plus", "print", "range",
"reduce-height", "remove-circle", "remove", "reset", "rotate-left", "rotate-right", "save-blue", "save-team", "save", "search", "star", "starline", "start",
"status-query-reply", "status-query", "status-urgent", "stop", "sync", "tick-chunky", "tick-circle", "tick-green", "tick", "time", "top", "trash-blue",
"trash", "trials", "team", "triangle", "undo", "waiting", "whiteboard", "zoom-in", "zoom-out");

// not available via <i>, only for CSS
$uiThemedIcons: ("face", "element-divider", "btn-goto", "tab-more-h", "tab-whiteboard", "tab-print", "tab-trash", "watermark-patient",
"nystagmus-arrow-h-1", "nystagmus-arrow-h-2", "nystagmus-arrow-h-3");


// -- these work across both themes:
$rgbIcons: ("circle-blue", "circle-green", "circle-yellow", "circle-orange", "circle-red", "circle-grey",
"triangle-blue", "triangle-green", "triangle-orange", "triangle-red", "triangle-grey", "exclamation-green", "exclamation-orange", "exclamation-red",
"flag-green", "flag-orange", "flag-red", "flag-grey", "mpr-green", "mpr-orange", "mpr-red", "warning-none", "warning", "cross-red",);


$uiIcons: ("asterisk-white", "filter", "list-dot", "arrow-right-blue", "no-permissions-white", "patient-grey",
"search-white", "search", "shortcut-arrow", "sidebar-audit-trail", "sidebar-switcher-elements", "sidebar-switcher-events",
"sidebar", "type-linebreak", "type-paragraph", "vc-move", "watermark-clinic");

// *********************
// CSS custom properties
:root {

	// currently both groups use "--i-ui-" prefix but this might need changing (ok, for now)
	@each $icon in $rgbIcons {
		--i-ui-#{$icon}: url("../svg/in-css/all/i/#{$icon}.svg");
	}
	@each $icon in $uiIcons {
		--i-ui-#{$icon}: url("../svg/in-css/all/ui/#{$icon}.svg");
	}
}

// *********************
// "dark": requires "theme-dark" class on <HTML>
html.theme-dark {

	@each $icon in $themedIcons {
		--i-#{$icon}: url("../svg/in-css/dark/i/#{$icon}.svg");
	}

	@each $icon in $uiThemedIcons {
		--i-#{$icon}: url("../svg/in-css/dark/ui/#{$icon}.svg");
	}

	@include cssVars("bg", $bg);
	@include cssVars("txt", $txt);
	@include cssVars("font", $font-weight);
	@include cssVars("gui", $gui);
	@include cssVars("btn", $btn);
	@include cssVars("color", $color);
	@include cssVars("input", $input);
}


// *********************
// "light": requires "theme-light" class on <HTML>
html.theme-light {

	@each $icon in $themedIcons {
		--i-#{$icon}: url("../svg/in-css/light/i/#{$icon}.svg");
	}

	@each $icon in $uiThemedIcons {
		--i-#{$icon}: url("../svg/in-css/light/ui/#{$icon}.svg");
	}

	@include cssVars("bg", $bg-light);
	@include cssVars("txt", $txt-light);
	@include cssVars("font", $font-weight-light);
	@include cssVars("gui", $gui-light);
	@include cssVars("btn", $btn-light);
	@include cssVars("color", $color-light);
	@include cssVars("input", $input-light);

}


